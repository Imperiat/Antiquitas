namespace = generic_infra_mission

generic_infra_mission.1 = {
    type = country_event
    title = generic_infra_mission.1.t
    desc = generic_infra_mission.1.desc
    picture = shrine_city
	goto_location = scope:shrine_territory
    
    left_portrait = current_ruler
    right_portrait = scope:religious_spokesman
    right_portrait = scope:shrine_province.governorship.governor

    trigger = {
		NOT = { has_variable = embezzlement_var }
		NOT = { has_variable = governor_contributions_var }
    	any_character = {
			is_ruler = no
			has_religion = root.religion
		}
		exists = scope:shrine_province
		scope:shrine_province.governorship = {
			exists = governor_or_ruler
			governor_or_ruler = {
				is_ruler = no
			}
		}
    }

    immediate = {
		set_variable = {
			name = embezzlement_var
			days = 300
		}
		if = {
			limit = {
				any_character = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
					has_priest_office_trigger = yes
				}
			}
			random_character = {
				limit = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					has_priest_office_trigger = yes
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
				weight = {
					factor = 1
					modifier = {
						factor = power_base
					}
					modifier = {
						factor = {
							value = zeal
							multiply = 2
						}
					}
				}
				save_scope_as = religious_spokesman
			}
		}
		else = {
			limit = {
				any_character = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
			}
			random_character = {
				limit = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
				weight = {
					factor = 1
					modifier = {
						factor = power_base
					}
					modifier = {
						factor = {
							value = zeal
							multiply = 2
						}
					}
				}
				save_scope_as = religious_spokesman
			}
		}
    }

    option = {      
        name = generic_infra_mission.1.a #We Cannot Tolerate his
        scope:religious_spokesman = {
			add_loyalty = loyalty_punished_embezzlement_1
		}
		scope:shrine_province.governorship.governor = {
			add_loyalty = loyalty_punished_embezzlement_2
			add_gold = -100
		}
    }

    option = {
        name = generic_infra_mission.1.b #Let him have some part of these funds.
        scope:religious_spokesman = {
			add_loyalty = loyalty_tolerated_embezzlement_1
		}
		scope:shrine_province.governorship.governor = {
			add_loyalty = loyalty_tolerated_embezzlement_2
			add_corruption = 15
			add_gold = 500
		}
    }
}

generic_infra_mission.2 = { #Influx of Artisans
    type = country_event
    title = generic_infra_mission.2.t
	left_portrait = current_ruler
    right_portrait = current_ruler
	desc = {
		random_valid = {
			triggered_desc = {
				trigger = { always = yes }
				desc = generic_infra_mission.2.desc
			}
			triggered_desc = {
				trigger = { always = yes }
				desc = generic_infra_mission.2.desc2
			}
		}
	}
    picture = shrine_city
	goto_location = scope:shrine_territory

    trigger = {
		exists = scope:shrine_territory
		NOT = { has_variable = artisans_var }
    }
	
	immediate = {
		set_variable = {
			name = artisans_var
			days = 300
		}
	}

    option = {      
        name = generic_infra_mission.2.a
		scope:shrine_territory = {
			create_state_pop = citizen
			create_state_pop = citizen
		}
    }
}

generic_infra_mission.3 = { #Contributions from Governor
    type = country_event
    title = generic_infra_mission.3.t
    desc = generic_infra_mission.3.desc
    picture = shrine_city
	goto_location = scope:shrine_territory
    
    left_portrait = current_ruler
    right_portrait = scope:shrine_province.governorship.governor

    trigger = {
		exists = scope:shrine_province
		NOT = { has_variable = governor_contributions_var }
		NOT = { has_variable = embezzlement_var }
    	any_character = {
			is_ruler = no
			has_religion = root.religion
		}
		scope:shrine_province.governorship = {
			exists = governor_or_ruler
			governor_or_ruler = {
				is_ruler = no
				NOT = { has_trait = harsh } #Opposite of Benefactor
			}
		}
    }
	
	immediate = {
		set_variable = {
			name = governor_contributions_var
			days = 300
		}
	}

    option = {      
        name = generic_infra_mission.3.a
		scope:shrine_territory = {
			add_province_modifier = {
				name = gubernatorial_aid
				duration = 180
			}
		}
        scope:shrine_province.governorship.governor = {
			add_trait = benefactor
			add_loyalty = loyalty_gubernatorial_aid
			if = {
				limit = {
					is_minor_character = no
				}
				family = {
					add_prestige = 150
				}
			}
		}
    }

    option = {
        name = generic_infra_mission.3.b
        scope:shrine_province.governorship.governor = {
			add_loyalty = loyalty_gov_aid_refused
		}
    }
}

generic_infra_mission.4 = { #Ending Ceremony
    type = country_event
    title = generic_infra_mission.4.t
    desc = generic_infra_mission.4.desc
    picture = shrine_city
	goto_location = scope:shrine_territory
    
    left_portrait = current_ruler
    right_portrait = scope:religious_spokesman

    trigger = {
		exists = scope:shrine_territory
    	any_character = {
			is_ruler = no
			has_religion = root.religion
		}
    }

    immediate = {
		if = {
			limit = {
				any_character = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
					has_priest_office_trigger = yes
				}
			}
			random_character = {
				limit = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					has_priest_office_trigger = yes
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
				weight = {
					factor = 1
					modifier = {
						factor = power_base
					}
					modifier = {
						factor = {
							value = zeal
							multiply = 2
						}
					}
				}
				save_scope_as = religious_spokesman
			}
		}
		else = {
			limit = {
				any_character = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
			}
			random_character = {
				limit = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
				weight = {
					factor = 1
					modifier = {
						factor = power_base
					}
					modifier = {
						factor = {
							value = zeal
							multiply = 2
						}
					}
				}
				save_scope_as = religious_spokesman
			}
		}
    }

    option = {      
        name = generic_infra_mission.4.a
		trigger = { is_monarchy = yes }
		add_legitimacy = legitimacy_large 
		add_country_modifier = {
			name = "cult_protector_religious_establishment"
			duration = 3650
		}
    }
    option = {      
        name = generic_infra_mission.4.b
		trigger = { is_tribal = yes }
		current_ruler = {
			add_popularity = popularity_large
		}
		add_country_modifier = {
			name = "cult_protector_religious_establishment"
			duration = 3650
		}
    }
    option = {      
        name = generic_infra_mission.4.c
		trigger = { is_republic = yes }
		traditionalist_approval_effect = {
			VALUE = party_approval_medium
		}
		add_country_modifier = {
			name = "cult_protector_religious_establishment"
			duration = 3650
		}
    }
    option = {
        name = generic_infra_mission.4.d
		scope:religious_spokesman = {
			add_loyalty = loyalty_praised_spokesman
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = 50 }
			}
		}
		add_country_modifier = {
			name = "cult_protector_religious_establishment"
			duration = 3650
		}
    }
}

generic_infra_mission.5 = { #Start of Renovations
	type = country_event 
    title = generic_infra_mission.5.t
    desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:religious_spokesman = { has_priest_office_trigger = yes } }
				desc = generic_infra_mission.5.desc
			}
			triggered_desc = {
				trigger = { always = yes }
				desc = generic_infra_mission.5.desc2
			}
		}
	}
    picture = shrine_city
	goto_location = scope:shrine_territory
    
    left_portrait = current_ruler
    right_portrait = scope:religious_spokesman
	
	trigger = {
		exists = scope:shrine_territory
	}

    immediate = {
		if = {
			limit = {
				any_character = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
					has_priest_office_trigger = yes
				}
			}
			random_character = {
				limit = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					has_priest_office_trigger = yes
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
				weight = {
					factor = 1
					modifier = {
						factor = power_base
					}
					modifier = {
						factor = {
							value = zeal
							multiply = 2
						}
					}
				}
				save_scope_as = religious_spokesman
			}
		}
		else = {
			current_ruler = { save_scope_as = religious_spokesman }
		}
    }

    option = {      
        name = generic_infra_mission.5.a
        custom_tooltip = generic_infra_mission.5.tooltip
		scope:shrine_territory = {
			add_province_modifier = {
				name = "ongoing_renovations"
				duration = -1
			}
		}
    }
}

generic_infra_mission.6 = { #End of Renovations
	type = country_event
    title = generic_infra_mission.6.t
    desc = generic_infra_mission.6.desc
    picture = shrine_city
	goto_location = scope:shrine_territory

	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:shrine_territory
	}

    option = {
        name = generic_infra_mission.6.a
		custom_tooltip = generic_infra_mission.6.tooltip
		if = {
			limit = {
				scope:shrine_territory = {
					has_province_modifier = ongoing_renovations
				}
			}
			scope:shrine_territory = {
				remove_province_modifier = ongoing_renovations
			}
		}
    }
}

generic_infra_mission.7 = {
	type = country_event
    title = generic_infra_mission.7.t
    desc = generic_infra_mission.7.desc 
    picture = greek_city_market
	goto_location = scope:shrine_territory
	
	left_portrait = current_ruler
    right_portrait = current_ruler

    trigger = {
		exists = scope:shrine_territory
    	NOT = {
			scope:shrine_territory.state = {
				has_state_modifier = pilgrim_traders
			}
		}
    }

    option = {
        name = generic_infra_mission.7.a
		scope:shrine_territory.state = {
			add_state_modifier = {
				name = "pilgrim_traders"
				duration = 1825
			}
		}
    }
}

#provincial_events.1 was repurposed from the random pulse and is on the same pulse as events 8-10 

generic_infra_mission.8 = { 
	type = country_event
    title = generic_infra_mission.8.t
    desc = generic_infra_mission.8.desc
    picture = greeks_marching
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler

    trigger = {
		exists = scope:governorship_capital
    	manpower > 4
    }

    option = {
        name = generic_infra_mission.8.a
		add_manpower = -3
		scope:governorship_capital = {
			create_state_pop = freemen
			create_state_pop = freemen
		}
    }
    option = {
        name = generic_infra_mission.8.b
		add_treasury = -100
    }
}

generic_infra_mission.9 = {
	type = country_event
    title = generic_infra_mission.9.t
    desc = generic_infra_mission.9.desc
    picture = greek_city_market
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler

    trigger = {
		exists = scope:governorship_capital
    	scope:infra_governorship = {
			any_governorship_state = {
				any_state_province = {
					total_population >= 8
					has_city_status = no
					NOT = { THIS = scope:governorship_capital }
				}
			}
		}
    }
	
	immediate = {
		scope:infra_governorship = {
			random_governorship_state = {
				random_state_province = {
					limit = {
						total_population >= 8
						has_city_status = no
						NOT = { THIS = scope:governorship_capital }
					}
					save_scope_as = migrant_province
				}
			}
	   }
	}

    option = {
		name = generic_infra_mission.9.a
		scope:migrant_province = {
			ordered_pops_in_province = {
				order_by = pop_hapiness
				check_range_bounds = no
				position = end
				move_pop = scope:governorship_capital
			}
			ordered_pops_in_province = {
				order_by = pop_hapiness
				check_range_bounds = no
				position = end
				move_pop = scope:governorship_capital
			}
			ordered_pops_in_province = {
				order_by = pop_hapiness
				check_range_bounds = no
				position = end
				move_pop = scope:governorship_capital
			}
		}
    }
    option = {
        name = generic_infra_mission.9.b
		scope:migrant_province = {
			add_province_modifier = {
				name = migrants_stopped
				duration = 1825
			}
		}
    }
}

generic_infra_mission.10 = {
	type = country_event
    title = generic_infra_mission.10.t
    desc = generic_infra_mission.10.desc
    picture = greek_city_market
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	trigger = { exists = scope:governorship_capital }

    option = {
		name = generic_infra_mission.10.a
		add_political_influence = 20
		current_ruler = {
			if = {
				limit = { is_minor_character = no }
				family = { add_prestige = 25 }
			}
		}
    }
}

#Monuments are done
generic_infra_mission.11 = {
	type = country_event
    title = generic_infra_mission.11.t
    desc = generic_infra_mission.11.desc
    picture = city_country
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = { exists = scope:governorship_capital }

    option = {
		name = generic_infra_mission.11.a
		if = {
			limit = {
				is_monarchy = yes
			}
			capital_scope = {
				create_2_nobles_effect = yes
				add_province_modifier = {
					name = "royal_palaces_mission_modifier"
					duration = -1
				}
			}
		}
		else_if = {
			limit = {
				is_republic = yes
			}
			capital_scope = {
				create_2_nobles_effect = yes
				add_province_modifier = {
					name = "forum_mission_modifier"
					duration = -1
				}
			}
		}
		else = {
			capital_scope = {
				create_2_nobles_effect = yes
				add_province_modifier = {
					name = "clan_council_compound_mission_modifier"
					duration = -1
				}
			}
		}
    }
}

#Governorship Capital Done
generic_infra_mission.12 = {
	type = country_event
    title = generic_infra_mission.11.t
    desc = generic_infra_mission.11.desc
    picture = greek_city_market
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = { exists = scope:governorship_capital }

    option = {
		name = generic_infra_mission.11.a
		scope:governorship_capital = { 
			create_state_pop = freemen
			create_state_pop = citizen
			add_province_modifier = {
				name = colonia_underway
				duration = 365
			}
		}
    }
}

#Pulse Events for Monuments in Capital:

#Power and Privilege
generic_infra_mission.13 = {
	type = country_event
    title = generic_infra_mission.13.t
    desc = generic_infra_mission.13.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
	left_portrait = scope:third_power_monger
	left_portrait = scope:fourth_power_monger
    right_portrait = scope:first_power_monger
    right_portrait = scope:second_power_monger
    right_portrait = scope:fifth_power_monger
	
	
	trigger = {
		NOT = { has_variable = had_power_and_privilege }
		exists = scope:governorship_capital
	}

	immediate = {
		set_variable = {
			name = had_power_and_privilege
			days = 300
		}
		every_family = {
			head_of_family = {
				if = {
					limit = {
						NOT = { exists = scope:first_power_monger }
						is_ruler = no
					}
					save_scope_as = first_power_monger
				}
				else_if = {
					limit = {
						NOT = { exists = scope:second_power_monger }
						is_ruler = no
					}
					save_scope_as = second_power_monger
				}
				else_if = {
					limit = {
						NOT = { exists = scope:third_power_monger}
						is_ruler = no
					}
					save_scope_as = third_power_monger
				}
				else_if = {
					limit = {
						NOT = { exists = scope:fourth_power_monger }
						is_ruler = no
					}
					save_scope_as = fourth_power_monger
				}
				else_if = {
					limit = {
						NOT = { exists = scope:fifth_power_monger }
						is_ruler = no
					}
					save_scope_as = fifth_power_monger
				}
				else_if = {
					limit = { is_ruler = yes }
					save_scope_as = ruler_family_monger
				}
			}
		}
	}

    option = {
		name = generic_infra_mission.13.ar
		trigger = {
			exists = scope:ruler_family_monger
		}
		custom_tooltip = generic_infra_mission.13.ar_tooltip
		current_ruler = { 
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = 50 } 
			}
		}
		every_family = {
			head_of_family = {
				if = {
					limit = { is_ruler = no }
					add_loyalty = loyalty_nepotism_unpopular
				}
			}
		}
    }

    option = {
		name = generic_infra_mission.13.a
		trigger = {
			exists = scope:first_power_monger
		}
		scope:first_power_monger = {
			add_loyalty = loyalty_favored_family
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = 50 }
			}
		}
    }
    option = {
		name = generic_infra_mission.13.b
		trigger = {
			exists = scope:second_power_monger
		}
		scope:second_power_monger = {
			add_loyalty = loyalty_favored_family
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = 50 }
			}
		}
    }
    option = {
		name = generic_infra_mission.13.c
		trigger = {
			exists = scope:third_power_monger
		}
		scope:third_power_monger = {
			add_loyalty = loyalty_favored_family
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = 50 }
			}
		}
    }
    option = {
		name = generic_infra_mission.13.d
		trigger = {
			exists = scope:fourth_power_monger
		}
		scope:fourth_power_monger = {
			add_loyalty = loyalty_favored_family
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = 50 }
			}
		}
    }
    option = {
		name = generic_infra_mission.13.e
		trigger = {
			exists = scope:fifth_power_monger
		}
		scope:fifth_power_monger = {
			add_loyalty = loyalty_favored_family
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = 50 }
			}
		}
    }
}

#Corruption and Crime
generic_infra_mission.14 = {
	type = country_event
    title = generic_infra_mission.14.t
    desc = generic_infra_mission.14.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:governorship_capital
		NOT = { has_variable = had_corruption_and_crime }
	}
	
	immediate = {
		set_variable = {
			name = had_corruption_and_crime
			days = 300
		}
	}

    option = {
		name = generic_infra_mission.14.a
		current_ruler = { add_corruption = 10 }
		 scope:governorship_capital = {
			add_province_modifier = {
				name = "building_corruption"
				duration = 3650
			}
		 }
    }
    option = {
		name = generic_infra_mission.14.b
		pay_price = price_reward_veterans
		scope:governorship_capital = {
			add_province_modifier = {
				name = "clean_slate"
				duration = 3650
			}
		 }
    }
}

#Social Stratification
generic_infra_mission.15 = {
	type = country_event
    title = generic_infra_mission.15.t
    desc = generic_infra_mission.15.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:governorship_capital
		NOT = { has_variable = had_social_stratification }
	}
	
	immediate = {
		set_variable = {
			name = had_social_stratification
			days = 300
		}
	}

    option = {
		name = generic_infra_mission.15.a #Clean up the Slums
		pay_price = send_gift
		scope:governorship_capital = {
			add_province_modifier = {
				name = "cleaned_up_slums"
				duration = 3650
			}
		 }
    }
    option = {
		name = generic_infra_mission.15.b #Commercial District
		pay_price = send_gift
		scope:governorship_capital = {
			add_province_modifier = {
				name = "expanded_commercial_district"
				duration = 3650
			}
		 }
    }
    option = {
		name = generic_infra_mission.15.c #We should not forget the districts of the elite
		pay_price = send_gift
		if = {
			limit = {
				current_ruler = { is_minor_character = no }
			}
			current_ruler = { family = { add_prestige = 25 } }
		}
		every_family = {
			head_of_family = {
				add_loyalty = loyalty_district_renovations
			}
		}
    }
    option = {
		name = generic_infra_mission.15.d #We should not forget the districts of the elite
		current_ruler = { 
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = -5 }
			}
		}
    }
}

#Pulse events for Governor Residence:

#Strongmen of [SCOPE.sGovernorship('infra_governorship').GetName]
generic_infra_mission.17 = {
	type = country_event
    title = generic_infra_mission.17.t
    desc = generic_infra_mission.17.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:governorship_capital
		NOT = { has_variable = had_strongmen }
	}
	
	immediate = {
		set_variable = {
			name = had_strongmen
			days = 300
		}
	}

    option = {
		name = generic_infra_mission.17.a
		scope:infra_governorship = {
			if = {
				limit = {
					any_governorship_state = {
						any_state_province = {
							has_city_status = no
							total_population >= 15
							any_pops_in_province = {
								NOT = { pop_type = slaves }
							}
						}
					}
				}
				random_governorship_state = {
					random_state_province = {
						limit = {
							has_city_status = no
							total_population >= 15
							any_pops_in_province = {
								NOT = { pop_type = slaves }
							}
						}
						random_pops_in_province = {
							limit = { NOT = { pop_type = slaves } }
							move_pop = scope:governorship_capital
						}
					}
				}
			}
			else = { scope:governorship_capital = { create_state_pop = citizen } }
		}
		scope:governorship_capital = {
			add_province_modifier = {
				name = "regional_magnates"
				duration = -1
			}
		}
    }
	option = {
		name = generic_infra_mission.17.b
		scope:governorship_capital = {
			add_state_loyalty = -15
			add_province_modifier = {
				name = "alienated_local_elites"
				duration = 3650
			}
		}
    }
}

#Establishing a Local Bureaucracy
generic_infra_mission.18 = {
	type = country_event
    title = generic_infra_mission.18.t
    desc = generic_infra_mission.18.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:governorship_capital
		NOT = { has_variable = had_local_bureaucrats }
		capital_scope = {
			any_pops_in_province = {
				count >= 2
				OR = {
					pop_type = citizen
					pop_type = nobles
				}
			}
		}
	}
	
	immediate = {
		set_variable = {
			name = had_local_bureaucrats
			days = 300
		}
	}

    option = {
		name = generic_infra_mission.18.a
		capital_scope = {
			ordered_pops_in_province = {
				limit = {
					OR = {
						pop_type = citizen
						pop_type = nobles
					}
				}
				order_by = pop_hapiness
				max = 2
				move_pop = scope:governorship_capital
			}
		}
    }
	option = {
		name = generic_infra_mission.18.b
		scope:governorship_capital = {
			state = {
				add_state_modifier = {
					name = "growing_pains"
					duration = 1825
				}
			}
		}
    }
}

#Cadastral Survey
generic_infra_mission.19 = {
	type = country_event
    title = generic_infra_mission.19.t
    desc = generic_infra_mission.19.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = scope:corrupt_family_head
	
	trigger = {
		exists = scope:governorship_capital
		NOT = { has_variable = had_survey }
	}
	
	immediate = {
		set_variable = {
			name = had_survey
			days = 300
		}
		random_family = {
			limit = {
				NOT = {
					any_family_member = { is_ruler = yes }
				}
			}
			head_of_family = { save_scope_as = local_land_owner }
		}
	}

    option = {
		name = generic_infra_mission.19.a
		custom_tooltip = generic_infra_mission.19.a.tooltip
		hidden_effect = {
			random_list = {
				25 = {
					trigger = {
						exists = scope:governorship_capital.governor
					}
					modifier = {
						add = scope:governorship_capital.governor.corruption
					}
					trigger_event = { id = generic_infra_mission.20 days = 30 }
				}
				50 = {
					trigger = {
						NOT = { exists = scope:governorship_capital.governor }
					}
					trigger_event = { id = generic_infra_mission.20 days = 30 }
				}
				50 = {
					trigger_event = { id = generic_infra_mission.21 days = 30 }
				}
			}
		}
    }
	option = {
		name = generic_infra_mission.19.b
		add_treasury = {
			value = root.has_monthly_income
			multiply = 3
		}
		current_ruler = {
			add_corruption = 20
			if = {
				limit = { is_minor_character = no }
				family = {
					add_prestige = -30
				}
			}
		}
    }
}

#Illegal Holdings
generic_infra_mission.20 = {
	type = country_event
    title = generic_infra_mission.20.t
    desc = generic_infra_mission.20.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = scope:local_land_owner
	
	trigger = {
		exists = scope:governorship_capital
	}
	
	immediate = {
		scope:local_land_owner = {
			family = {
				every_family_member = {
					limit = {
						any_holdings = {
							is_in_region = scope:governorship_capital
						}
					}
					random_holdings = {
						limit = {
							is_in_region = scope:governorship_capital
						}
						save_scope_as = holding_to_be_removed
					}
					random_holdings = {
						limit = {
							is_in_region = scope:governorship_capital
							NOT = { THIS = scope:holding_to_be_removed }
						}
						save_scope_as = holding_to_be_removed_2
					}
					random_holdings = {
						limit = {
							is_in_region = scope:governorship_capital
							NOT = { THIS = scope:holding_to_be_removed }
							NOT = { THIS = scope:holding_to_be_removed_2 }
						}
						save_scope_as = holding_to_be_removed_3
					}
				}
			}
		}
	}
	
    option = {
		name = generic_infra_mission.20.a
		scope:local_land_owner = {
			add_loyalty = loyalty_holdings_seized
			family = {
				add_prestige = -50
				if = {
					limit = { exists = scope:holding_to_be_removed }
					if = {
						random_family_member = {
							limit = { has_holding_in = scope:holding_to_be_removed }
							remove_holding = scope:holding_to_be_removed
						}
					}
				}
				else = {
					ordered_family_member = {
						order_by = wealth
						max = 1
						add_gold = -200
					}
				}
				if = {
					limit = { exists = scope:holding_to_be_removed_2 }
					if = {
						random_family_member = {
							limit = { has_holding_in = scope:holding_to_be_removed_2 }
							remove_holding = scope:holding_to_be_removed_2
						}
					}
				}
				else = {
					ordered_family_member = {
						order_by = wealth
						max = 1
						add_gold = -200
					}
				}
				if = {
					limit = { exists = scope:holding_to_be_removed_3 }
					if = {
						random_family_member = {
							limit = { has_holding_in = scope:holding_to_be_removed_3 }
							remove_holding = scope:holding_to_be_removed_3
						}
					}
				}
				else = {
					ordered_family_member = {
						order_by = wealth
						max = 1
						add_gold = -200
					}
				}
			}
		}
    }
	option = {
		name = generic_infra_mission.20.b
		scope:local_land_owner = { add_loyalty = loyalty_malpractice_overlooked }
		current_ruler = { add_corruption = 20 }
    }
}

#Cadastral Survey Finished
generic_infra_mission.21 = {
	type = country_event
    title = generic_infra_mission.21.t
    desc = generic_infra_mission.21.desc
    picture = city_construction
	goto_location = scope:governorship_capital
	
	trigger = { exists = scope:governorship_capital }
	
	left_portrait = current_ruler
    right_portrait = scope:corrupt_family_head

    option = {
		name = generic_infra_mission.21.a
		scope:local_land_owner = { add_loyalty = loyalty_pleasant_survey }
    }
}

#Iron Found
generic_infra_mission.22 = {
	type = country_event
    title = generic_infra_mission.22.t
    desc = generic_infra_mission.22.desc
    picture = quarry
	goto_location = scope:find_struck_here
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:mining_province
		scope:mining_province = {
			any_state_province = {
				OR = {
					terrain = hills
					terrain = mountains
				}
				NOT = { has_variable = found_something_but_did_not_mine }
				has_unminable_trade_good_trigger = yes
			}
		}
	}
	
	immediate = {
		scope:mining_province = {
			random_state_province = {
				limit = {
					OR = {
						terrain = hills
						terrain = mountains
					}
					NOT = { has_variable = found_something_but_did_not_mine }
					has_unminable_trade_good_trigger = yes
				}
				save_scope_as = find_struck_here
			}
		}
	}

    option = {
		name = generic_infra_mission.22.a
		scope:find_struck_here = {
			if = {
				limit = { has_building = agriculture_building }
				remove_building_level = agriculture_building
				ROOT = { add_treasury = -200 }
			}
			else = {
				ROOT = { add_treasury = -300 }
			}
			set_trade_goods = iron
		}
    }
    option = {
		name = generic_infra_mission.22.b
		scope:find_struck_here = {
			set_variable = found_something_but_did_not_mine
		}
		custom_tooltip = no_thanks_prospector
    }
}

#Gold Found
generic_infra_mission.23 = {
	type = country_event
    title = generic_infra_mission.23.t
    desc = generic_infra_mission.23.desc
    picture = war_chest
	goto_location = scope:find_struck_here
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:mining_province
		scope:mining_province = {
			any_state_province = {
				OR = {
					terrain = hills
					terrain = mountains
				}
				NOT = { has_variable = found_something_but_did_not_mine }
				has_unminable_trade_good_trigger = yes
			}
		}
	}
	
	immediate = {
		scope:mining_province = {
			random_state_province = {
				limit = {
					OR = {
						terrain = hills
						terrain = mountains
					}
					NOT = { has_variable = found_something_but_did_not_mine }
					has_unminable_trade_good_trigger = yes
				}
				save_scope_as = find_struck_here
			}
		}
	}

    option = {
		name = generic_infra_mission.23.a
		scope:find_struck_here = {
			if = {
				limit = { has_building = agriculture_building }
				remove_building_level = agriculture_building
				ROOT = { add_treasury = -200 }
			}
			else = {
				ROOT = { add_treasury = -300 }
			}
			set_trade_goods = precious_metals
		}
    }
    option = {
		name = generic_infra_mission.23.b
		scope:find_struck_here = {
			set_variable = found_something_but_did_not_mine
		}
		custom_tooltip = no_thanks_prospector
    }
}

#Gems Found
generic_infra_mission.24 = {
	type = country_event
    title = generic_infra_mission.24.t
    desc = generic_infra_mission.24.desc
    picture = war_chest
	goto_location = scope:find_struck_here
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:mining_province
		scope:mining_province = {
			any_state_province = {
				OR = {
					terrain = hills
					terrain = mountains
					terrain = desert
				}
				NOT = { has_variable = found_something_but_did_not_mine }
				has_unminable_trade_good_trigger = yes
			}
		}
	}
	
	immediate = {
		scope:mining_province = {
			random_state_province = {
				limit = {
					OR = {
						terrain = hills
						terrain = mountains
					}
					NOT = { has_variable = found_something_but_did_not_mine }
					has_unminable_trade_good_trigger = yes
				}
				save_scope_as = find_struck_here
			}
		}
	}

    option = {
		name = generic_infra_mission.24.a
		scope:find_struck_here = {
			if = {
				limit = { has_building = agriculture_building }
				remove_building_level = agriculture_building
				ROOT = { add_treasury = -800 }
			}
			else = {
				ROOT = { add_treasury = -900 }
			}
			set_trade_goods = gems
		}
    }
    option = {
		name = generic_infra_mission.24.b
		scope:find_struck_here = {
			set_variable = found_something_but_did_not_mine
		}
		custom_tooltip = no_thanks_prospector
    }
}

#Base Metals Found
generic_infra_mission.25 = {
	type = country_event
    title = generic_infra_mission.25.t
    desc = generic_infra_mission.25.desc
    picture = quarry
	goto_location = scope:find_struck_here
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:mining_province
		scope:mining_province = {
			any_state_province = {
				OR = {
					terrain = hills
					terrain = mountains
					terrain = desert
				}
				NOT = { has_variable = found_something_but_did_not_mine }
				has_unminable_trade_good_trigger = yes
			}
		}
	}
	
	immediate = {
		scope:mining_province = {
			random_state_province = {
				limit = {
					OR = {
						terrain = hills
						terrain = mountains
						terrain = desert
					}
					NOT = { has_variable = found_something_but_did_not_mine }
					has_unminable_trade_good_trigger = yes
				}
				save_scope_as = find_struck_here
			}
		}
	}

    option = {
		name = generic_infra_mission.25.a
		scope:find_struck_here = {
			if = {
				limit = { has_building = agriculture_building }
				remove_building_level = agriculture_building
				ROOT = { add_treasury = -100 }
			}
			else = {
				ROOT = { add_treasury = -200 }
			}
			set_trade_goods = base_metals
		}
    }
    option = {
		name = generic_infra_mission.25.b
		scope:find_struck_here = {
			set_variable = found_something_but_did_not_mine
		}
		custom_tooltip = no_thanks_prospector
    }
}

#Minor Deposit
generic_infra_mission.26 = {
	type = country_event
    title = generic_infra_mission.26.t
    desc = generic_infra_mission.26.desc
    picture = war_chest
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:mining_province
		scope:mining_province = {
			any_state_province = {
				OR = {
					terrain = hills
					terrain = mountains
					terrain = desert
				}
				NOT = { has_variable = found_something_but_did_not_mine }
				has_unminable_trade_good_trigger = yes
			}
		}
	}
	
	immediate = {
		scope:mining_province = {
			random_state_province = {
				limit = {
					OR = {
						terrain = hills
						terrain = mountains
						terrain = desert
					}
					NOT = { has_variable = found_something_but_did_not_mine }
					has_unminable_trade_good_trigger = yes
				}
				save_scope_as = find_struck_here
			}
		}
	}

    option = {
		name = generic_infra_mission.26.a
		add_treasury = 300
		scope:find_struck_here = {
			set_variable = found_something_but_did_not_mine
		}
    }
}

#No Find
generic_infra_mission.27 = {
	type = country_event
    title = generic_infra_mission.27.t
    desc = generic_infra_mission.27.desc
    picture = quarry
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = current_ruler
	
	trigger = {
		exists = scope:mining_province
		scope:mining_province = {
			any_state_province = {
				OR = {
					terrain = hills
					terrain = mountains
					terrain = desert
				}
				NOT = { has_variable = found_something_but_did_not_mine }
				has_unminable_trade_good_trigger = yes
			}
		}
	}
	
	immediate = {
		scope:mining_province = {
			random_state_province = {
				limit = {
					OR = {
						terrain = hills
						terrain = mountains
						terrain = desert
					}
					NOT = { has_variable = found_something_but_did_not_mine }
					has_unminable_trade_good_trigger = yes
				}
				save_scope_as = find_struck_here
			}
		}
	}

    option = {
		name = generic_infra_mission.27.a
		scope:find_struck_here = {
			set_variable = found_something_but_did_not_mine
		}
    }
}

#Loyal Henchmen
generic_infra_mission.28 = {
	type = country_event
    title = generic_infra_mission.28.t
    desc = generic_infra_mission.28.desc
    picture = council_country
	goto_location = scope:governorship_capital
	
	left_portrait = current_ruler
    right_portrait = scope:new_minor_helper_1
    right_portrait = scope:new_minor_helper_2
    right_portrait = scope:new_minor_helper_3
	
	trigger = { exists = scope:governorship_capital }

	immediate = {
		scope:governorship_capital = {
			state = {
				ordered_state_province  = {
					limit = { is_state_capital = no }
					order_by = total_population
					max = 1
					save_scope_as = characters_from_here
				}
			}
			if = {
				limit = { exists = scope:characters_from_here }
				random_state_province = {
					limit = {
						is_state_capital = no
						NOT = { THIS = scope:characters_from_here }
					}
					save_scope_as = characters_from_here_too
				}
			}
		}
		
		switch = {
			trigger = gender_equality
			yes = {
				create_character = {
					age = 30
					culture = scope:governorship_capital.dominant_province_culture
					religion = scope:governorship_capital.dominant_province_religion
					save_scope_as = new_minor_helper_1
					no_stats = yes
				}
			}
			no = {
				create_character = {
					age = 30
					female = no
					no_stats = yes
					culture = scope:governorship_capital.dominant_province_culture
					religion = scope:governorship_capital.dominant_province_religion
					save_scope_as = new_minor_helper_1
				}
			}
		}
		if = {
			limit = { exists = scope:characters_from_here }
			switch = {
				trigger = gender_equality
				yes = {
					create_character = {
						age = 30
						culture = scope:characters_from_here.dominant_province_culture
						religion = scope:characters_from_here.dominant_province_religion
						save_scope_as = new_minor_helper_2
						no_stats = yes
					}
				}
				no = {
					create_character = {
						age = 30
						female = no
						no_stats = yes
						culture = scope:characters_from_here.dominant_province_culture
						religion = scope:characters_from_here.dominant_province_religion
						save_scope_as = new_minor_helper_2
					}
				}
			}
		}
		if = {
			limit = { exists = scope:characters_from_here_too }
			switch = {
				trigger = gender_equality
				yes = {
					create_character = {
						age = 30
						culture = scope:characters_from_here_too.dominant_province_culture
						religion = scope:characters_from_here_too.dominant_province_religion
						save_scope_as = new_minor_helper_3
						no_stats = yes
					}
				}
				no = {
					create_character = {
						age = 30
						female = no
						no_stats = yes
						culture = scope:characters_from_here_too.dominant_province_culture
						religion = scope:characters_from_here_too.dominant_province_religion
						save_scope_as = new_minor_helper_3
					}
				}
			}
		}
		hidden_effect = {
			scope:new_minor_helper_1 = {
				great_martial_effect = yes
				average_charisma_effect = yes
				average_finesse_effect = yes
				bad_zeal_effect = yes
				add_loyalty = loyalty_new_man
			}
			scope:new_minor_helper_2 = {
				good_martial_effect = yes
				bad_charisma_effect = yes
				great_finesse_effect = yes
				average_zeal_effect = yes
				add_loyalty = loyalty_new_man
			}
			scope:new_minor_helper_3 = {
				bad_martial_effect = yes
				great_charisma_effect = yes
				good_finesse_effect = yes
				average_zeal_effect = yes
				add_loyalty = loyalty_new_man
			}
		}
	}

    option = {
		name = generic_infra_mission.28.a
		show_as_tooltip = {
			scope:governorship_capital = {
				add_province_modifier = {
					name = "well_cared_for_governorship_center"
					duration = -1
				}
			}
		}
    }
}


generic_infra_mission.29 = { #Ending Ceremony - Subject state
    type = country_event
    title = generic_infra_mission.29.t
    desc = generic_infra_mission.29.desc
    picture = shrine_city
	goto_location = scope:shrine_territory
    
    left_portrait = current_ruler
    left_portrait = scope:religious_spokesman
    right_portrait = scope:religious_family_1
    right_portrait = scope:religious_family_2
    right_portrait = scope:religious_family_3
	
	 trigger = {
		exists = scope:shrine_territory
	 }

    immediate = {
		if = {
			limit = {
				any_character = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
					has_priest_office_trigger = yes
				}
			}
			random_character = {
				limit = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					has_priest_office_trigger = yes
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
				weight = {
					factor = 1
					modifier = {
						factor = power_base
					}
					modifier = {
						factor = {
							value = zeal
							multiply = 2
						}
					}
				}
				save_scope_as = religious_spokesman
			}
		}
		else_if = {
			limit = {
				any_character = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
			}
			random_character = {
				limit = {
					is_ruler = no
					is_governor = no
					has_religion = root.religion
					NOT = { location = scope:shrine_territory } #Governors will be here
				}
				weight = {
					factor = 1
					modifier = {
						factor = power_base
					}
					modifier = {
						factor = {
							value = zeal
							multiply = 2
						}
					}
				}
				save_scope_as = religious_spokesman
			}
		}
		else = {
			create_character = {
				age = 35
				female = no
				religion = employer.religion
				save_scope_as = religious_spokesman
			}
		}
		
		ordered_character = {
			order_by = zeal
			limit = {
				is_ruler = no
				is_adult = yes
				trigger_if = {
					limit = { ROOT = { gender_equality = no } }
					is_male = yes
				}
				is_minor_character = no
				home_country = ROOT
				NOT = {
					family = {
						any_family_member = { is_ruler = yes }
					}
				}
			}
			save_scope_as = religious_family_1
		}
		ordered_character = {
			order_by = zeal
			limit = {
				is_ruler = no
				is_adult = yes
				trigger_if = {
					limit = { ROOT = { gender_equality = no } }
					is_male = yes
				}
				is_minor_character = no
				NOT = { has_same_family = scope:religious_family_1 }
				home_country = ROOT
				NOT = {
					family = {
						any_family_member = { is_ruler = yes }
					}
				}
			}
			save_scope_as = religious_family_2
		}
		ordered_character = {
			order_by = zeal
			limit = {
				is_ruler = no
				is_adult = yes
				trigger_if = {
					limit = { ROOT = { gender_equality = no } }
					is_male = yes
				}
				is_minor_character = no
				home_country = ROOT
				NOT = { has_same_family = scope:religious_family_1 }
				NOT = { has_same_family = scope:religious_family_2 }
				NOT = {
					family = {
						any_family_member = { is_ruler = yes }
					}
				}
			}
			save_scope_as = religious_family_3
		}
    }

    option = {      
        name = generic_infra_mission.29.a
		trigger = { exists = scope:religious_family_1 }
		custom_tooltip = generic_infra_mission.29.a.tooltip
		scope:religious_family_1 = {
			family = {
				head_of_family = {
					add_loyalty = family_granted_temple_city
				}
				add_prestige = 25
			}
		}
		add_country_modifier = {
			name = "cult_protector_religious_establishment"
			duration = 3650
		}
		hidden_effect = {
			scope:religious_family_1 = {
				remove_all_positions = yes
				move_country = scope:theocratic_enclave
				scope:theocratic_enclave = {
					create_family = PREV
					set_as_ruler = PREV
				}
				remove_character_modifier = foreign_citizen
				if = {
					limit = { exists = spouse }
					spouse = {
						remove_all_positions = yes
						move_country = scope:theocratic_enclave
						set_as_minor_character = THIS
						remove_character_modifier = foreign_citizen
					}
				}
				every_child = {
					remove_all_positions = yes
					move_country = scope:theocratic_enclave
					scope:theocratic_enclave = {
						create_family = PREV
					}
				}
			}
			scope:religious_family_1 = { #This time it is in the new country.
				family = { add_prestige = 350 }
			}
		}
    }
    option = {      
        name = generic_infra_mission.29.b
		trigger = { exists = scope:religious_family_2 }
		custom_tooltip = generic_infra_mission.29.b.tooltip
		scope:religious_family_2 = {
			family = {
				head_of_family = {
					add_loyalty = family_granted_temple_city
				}
				add_prestige = 25
			}
		}
		add_country_modifier = {
			name = "cult_protector_religious_establishment"
			duration = 3650
		}
		hidden_effect = {
			scope:religious_family_2 = {
				remove_all_positions = yes
				move_country = scope:theocratic_enclave
				scope:theocratic_enclave = {
					create_family = PREV
					set_as_ruler = PREV
				}
				remove_character_modifier = foreign_citizen
				if = {
					limit = { exists = spouse }
					spouse = {
						remove_all_positions = yes
						move_country = scope:theocratic_enclave
						set_as_minor_character = THIS
						remove_character_modifier = foreign_citizen
					}
				}
				every_child = {
					remove_all_positions = yes
					move_country = scope:theocratic_enclave
					scope:theocratic_enclave = {
						create_family = PREV
					}
				}
			}
			scope:religious_family_2 = {
				family = { add_prestige = 350 }
			}
		}
    }
    option = {      
        name = generic_infra_mission.29.c
		trigger = { exists = scope:religious_family_3 }
		custom_tooltip = generic_infra_mission.29.c.tooltip
		scope:religious_family_3 = {
			family = {
				add_prestige = 25
				head_of_family = {
					add_loyalty = family_granted_temple_city
				}
			}
		}
		add_country_modifier = {
			name = "cult_protector_religious_establishment"
			duration = 3650
		}
		hidden_effect = {
			scope:religious_family_3 = {
				remove_all_positions = yes
				move_country = scope:theocratic_enclave
				scope:theocratic_enclave = {
					create_family = PREV
					set_as_ruler = PREV
				}
				remove_character_modifier = foreign_citizen
				if = {
					limit = { exists = spouse }
					spouse = {
						remove_all_positions = yes
						move_country = scope:theocratic_enclave
						set_as_minor_character = THIS
						remove_character_modifier = foreign_citizen
					}
				}
				every_child = {
					remove_all_positions = yes
					move_country = scope:theocratic_enclave
					scope:theocratic_enclave = {
						create_family = PREV
					}
				}
			}
			scope:religious_family_3 = {
				family = { add_prestige = 350 }
			}
		}
    }
}

generic_infra_mission.30 = { #Ending Ceremony - Subject state
    type = country_event
    title = generic_infra_mission.30.t
    desc = generic_infra_mission.30.desc
    picture = shrine_city
	goto_location = scope:shrine_territory
    
    left_portrait = current_ruler
    left_portrait = scope:religious_spokesman
    right_portrait = scope:religious_family_1
    right_portrait = scope:religious_family_2
    right_portrait = scope:religious_family_3
	
	trigger = {
		exists = scope:shrine_territory
		any_character = {
			is_ruler = no
			is_adult = yes
			is_minor_character = no
			trigger_if = {
				limit = { ROOT = { gender_equality = no } }
				is_male = yes
			}
			char_is_unoccupied_trigger = yes
			home_country = ROOT
			is_admiral = no
			is_general = no
			is_governor = no
			home_country = ROOT
			NOT = {
				family = {
					any_family_member = { is_ruler = yes }
				}
			}
		}
	}

    immediate = {
		
		ordered_character = {
			order_by = martial
			limit = {
				is_ruler = no
				is_adult = yes
				is_minor_character = no
				trigger_if = {
					limit = { ROOT = { gender_equality = no } }
					is_male = yes
				}
				char_is_unoccupied_trigger = yes
				is_admiral = no
				home_country = ROOT
				is_general = no
				is_governor = no
				NOT = {
					family = {
						any_family_member = { is_ruler = yes }
					}
				}
			}
			save_scope_as = naval_family_1
		}
		ordered_character = {
			order_by = martial
			limit = {
				is_ruler = no
				is_adult = yes
				is_minor_character = no
				trigger_if = {
					limit = { ROOT = { gender_equality = no } }
					is_male = yes
				}
				char_is_unoccupied_trigger = yes
				is_admiral = no
				is_general = no
				is_governor = no
				home_country = ROOT
				NOT = { has_same_family = scope:naval_family_1 }
				NOT = {
					family = {
						any_family_member = { is_ruler = yes }
					}
				}
			}
			save_scope_as = naval_family_2
		}
		ordered_character = {
			order_by = martial
			limit = {
				is_ruler = no
				is_minor_character = no
				is_adult = yes
				trigger_if = {
					limit = { ROOT = { gender_equality = no } }
					is_male = yes
				}
				char_is_unoccupied_trigger = yes
				is_admiral = no
				is_general = no
				is_governor = no
				home_country = ROOT
				NOT = { has_same_family = scope:naval_family_1 }
				NOT = { has_same_family = scope:naval_family_2 }
				NOT = {
					family = {
						any_family_member = { is_ruler = yes }
					}
				}
			}
			save_scope_as = naval_family_3
		}
    }

    option = {      
        name = generic_infra_mission.30.a
		trigger = { exists = scope:naval_family_1 }
		scope:naval_family_1 = {
			family = {
				head_of_family = {
					add_loyalty = family_granted_naval_job
				}
				add_prestige = 25
			}
		}
		hidden_effect = {
			scope:naval_family_1 = {
				remove_all_positions = yes
			}
		}
		scope:new_navy = {
			set_as_commander = scope:naval_family_1
		}
    }
    option = {      
        name = generic_infra_mission.30.b
		trigger = { exists = scope:naval_family_2 }
		scope:naval_family_2 = {
			family = {
				head_of_family = {
					add_loyalty = family_granted_naval_job
				}
				add_prestige = 25
			}
		}
		hidden_effect = {
			scope:naval_family_2 = {
				remove_all_positions = yes
			}
		}
		scope:new_navy = {
			set_as_commander = scope:naval_family_2
		}
    }
    option = {      
        name = generic_infra_mission.30.c
		trigger = { exists = scope:naval_family_3 }
		scope:naval_family_3 = {
			family = {
				head_of_family = {
					add_loyalty = family_granted_naval_job
				}
				add_prestige = 25
			}
		}
		hidden_effect = {
			scope:naval_family_3 = {
				remove_all_positions = yes
			}
		}
		scope:new_navy = {
			set_as_commander = scope:naval_family_3
		}
    }
}

#Bypass
generic_infra_mission.34 = { # food_branch_1
    type = country_event
    title = generic_infra_mission.34.t
    desc = generic_infra_mission.34.desc
    picture = farming
	
    trigger = {
    	is_ai = no
    	NAND = {
    		has_variable = good_infra_bypass_cooldown
    		var:good_infra_bypass_cooldown = scope:food_province
    	}
    }

    immediate = {
    	set_variable = {
    		name = good_infra_bypass_cooldown
    		value = scope:food_province
    		days = 15
    	}
    }

    option = {
    	name = generic_infra_mission.34.a
    	custom_tooltip = generic_infra_mission.34.at
    }
}

generic_infra_mission.35 = { # granary_of_x / food
    type = country_event
    title = generic_infra_mission.35.t
    desc = generic_infra_mission.34.desc
    picture = farming
	
    trigger = {
    	is_ai = no
    	NAND = {
    		has_variable = good_infra_bypass_cooldown
    		var:good_infra_bypass_cooldown = scope:food_province
    	}
    }

	immediate = {
    	set_variable = {
    		name = good_infra_bypass_cooldown
    		value = scope:food_province
    		days = 15
    	}
    }

    option = {
    	name = generic_infra_mission.34.a
    	custom_tooltip = generic_infra_mission.35.at
    }
}

generic_infra_mission.36 = { # food_market_of_x / food
    type = country_event
    title = generic_infra_mission.36.t
    desc = generic_infra_mission.34.desc
    picture = farming
	
    trigger = {
    	is_ai = no
    	NAND = {
    		has_variable = good_infra_bypass_cooldown
    		var:good_infra_bypass_cooldown = scope:food_province
    	}
    }

    immediate = {
    	set_variable = {
    		name = good_infra_bypass_cooldown
    		value = scope:food_province
    		days = 15
    	}
    }

    option = {
    	name = generic_infra_mission.34.a
    	custom_tooltip = generic_infra_mission.36.at
    }
}

generic_infra_mission.38 = { # mining_branch_1 / mines
    type = country_event
    title = generic_infra_mission.38.t
    desc = generic_infra_mission.38.desc
    picture = quarry
	
    trigger = {
    	is_ai = no
    	NAND = {
    		has_variable = mining_infra_bypass_cooldown
    		var:mining_infra_bypass_cooldown = scope:mining_province
    	}
    }

    immediate = {
    	set_variable = {
    		name = mining_infra_bypass_cooldown
    		value = scope:mining_province
    		days = 15
    	}
    }

    option = {
    	name = generic_infra_mission.38.a
    	custom_tooltip = generic_infra_mission.38.at
    }
}

generic_infra_mission.39 = { # expand_work_force / mines
    type = country_event
    title = generic_infra_mission.39.t
    desc = generic_infra_mission.38.desc
    picture = quarry
	
    trigger = {
    	is_ai = no
    	NAND = {
    		has_variable = mining_infra_bypass_cooldown
    		var:mining_infra_bypass_cooldown = scope:mining_province
    	}
    }

    immediate = {
    	set_variable = {
    		name = mining_infra_bypass_cooldown
    		value = scope:mining_province
    		days = 15
    	}
    }

    option = {
    	name = generic_infra_mission.38.a
    	custom_tooltip = generic_infra_mission.39.at
    }
}

generic_infra_mission.40 = { # prospecting_mission / mines
    type = country_event
    title = generic_infra_mission.40.t
    desc = generic_infra_mission.38.desc
    picture = quarry
	
    trigger = {
    	is_ai = no
    	NAND = {
    		has_variable = mining_infra_bypass_cooldown
    		var:mining_infra_bypass_cooldown = scope:mining_province
    	}
    }

    immediate = {
    	set_variable = {
    		name = mining_infra_bypass_cooldown
    		value = scope:mining_province
    		days = 15
    	}
    }

    option = {
    	name = generic_infra_mission.38.a
    	custom_tooltip = generic_infra_mission.40.at
    }
}
