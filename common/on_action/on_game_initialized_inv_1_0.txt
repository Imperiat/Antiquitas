on_game_initialized = {

	on_actions = {
		fix_succession_on_action
	}

	events = {
		###Spartan Diarchy
		special_spartan_event.1

		###Birth Order Traits
		firstborn_traits.1

		###Interesting Treasures
		interesting_treasures.1

		###Interesting Histories
		interesting_histories_country_events.1
		interesting_histories_country_events.2
		interesting_histories_country_events.3
		interesting_histories_country_events.4
		interesting_histories_country_events.5
		interesting_histories_country_events.6
		interesting_histories_country_events.7
		interesting_histories_country_events.8
		interesting_histories_country_events.9
		interesting_histories_country_events.10
		interesting_histories_country_events.11
		interesting_histories_country_events.12
		interesting_histories_country_events.13
		#interesting_histories_country_events.14
		interesting_histories_country_events.15
		interesting_histories_country_events.16
		interesting_histories_country_events.17
		interesting_histories_country_events.18
		interesting_histories_country_events.19
		interesting_histories_country_events.20
		interesting_histories_country_events.21
		interesting_histories_country_events.22
		interesting_histories_country_events.23
		interesting_histories_country_events.24
		interesting_histories_country_events.25
		interesting_histories_country_events.26
		interesting_histories_country_events.27
		interesting_histories_country_events.28
		interesting_histories_country_events.29
		interesting_histories_country_events.30
		interesting_histories_country_events.31
		interesting_histories_country_events.32
		interesting_histories_country_events.33
		interesting_histories_country_events.34

		###Iberian Starts
		iberian_starting_country_events.1
		iberian_starting_country_events.2
		iberian_starting_country_events.3
		iberian_starting_country_events.4
		iberian_starting_country_events.5
		iberian_starting_country_events.6
	}

	effect = {
		#vanilla
		### Unique Mechanics ###
		startup_variables_unique_mechanics_effect = yes
		### Unique Deities ###
		startup_variables_unique_deities_effect = yes
		### Cultural Minority Rights ###
		startup_cultural_decisions_effect = yes
		### Variable for fixing new monarchies ###
		if = {
			limit = {
				is_monarchy = yes
			}
			set_variable = {
				name = fix_new_countries
			}
		### Other ###
		if = {
			limit = {
				has_law = work_for_the_best
			}
			set_legion_recruitment = capital
		}
		add_innovation = {
			value = oratory_tech
		}
		add_innovation = {
			value = military_tech
		}
		add_innovation = {
			value = civic_tech
		}
		add_innovation = {
			value = religious_tech
		}
		if = {
			limit = { tag = ELI }
	        set_global_variable = {
	            name = olympic_counter_global_var
	            value = 119
	        }
			p:439 = {
				add_permanent_province_modifier = {
					name = olympic_games_modifier
					duration = -1
				}
				set_variable = {
					name = olympics_countdown # for debugging
					days = 1287
				}
				trigger_event = {
					id = olympic.12
					days = 1287 # 11 Apr 300 BC/454 AUC
				}
			}
		}
		if = {
			limit = {
				OR = {
					rank = local_power
					rank = regional_power
					rank = major_power
					rank = great_power
				}
				num_of_cities > 15
			}
			every_family = {
				ROOT = {
					random_owned_province = {
						limit = {
							is_capital = no
							NOT = {
								exists = holding_owner
							}
						}
						save_scope_as = first_holding
						weight = {
							modifier = {
								factor = 100000
								any_neighbor_province = {
									NOT = { exists = holding_owner }
								}
							}
						}
					}
				}
				head_of_family = {
					add_holding = scope:first_holding
				}
			}
		}
		#More for the bigger tags!
		if = {
			limit = {
				rank = regional_power
			}
			every_family = {
				head_of_family = { save_scope_as = hof }
				while = {
					count = 3
					ROOT = {
						random_owned_province = {
							limit = {
								is_capital = no
								OR = {
									NOT = {
										exists = holding_owner
									}
									AND = {
										exists = holding_owner
										holding_owner = {
											is_alive = no
										}
									}
								}
							}
							weight = {
								modifier = {
									factor = 10000
									any_neighbor_province = {
										trigger_if = {
											limit = {
												exists = holding_owner
											}
											holding_owner = scope:hof
										}
										trigger_else = {
											always = no
										}
									}
								}
							}
							save_scope_as = buy_holding_target
						}
					}
					head_of_family = {
						add_holding = scope:buy_holding_target
					}
				}
			}
		}
		else_if = {
			limit = {
				rank = major_power
			}
			every_family = {
				head_of_family = { save_scope_as = hof }
				while = {
					count = 10
					ROOT = {
						random_owned_province = {
							limit = {
								is_capital = no
								OR = {
									NOT = {
										exists = holding_owner
									}
									AND = {
										exists = holding_owner
										holding_owner = {
											is_alive = no
										}
									}
								}
							}
							weight = {
								modifier = {
									factor = 10000
									any_neighbor_province = {
										trigger_if = {
											limit = {
												exists = holding_owner
											}
											holding_owner = scope:hof
										}
										trigger_else = {
											always = no
										}
									}
								}
							}
							save_scope_as = buy_holding_target
						}
					}
					head_of_family = {
						add_holding = scope:buy_holding_target
					}
				}
			}
		}
		else_if = {
			limit = {
				rank = great_power
			}
			every_family = {
				head_of_family = { save_scope_as = hof }
				while = {
					count = 20
					ROOT = {
						random_owned_province = {
							limit = {
								is_capital = no
								OR = {
									NOT = {
										exists = holding_owner
									}
									AND = {
										exists = holding_owner
										holding_owner = {
											is_alive = no
										}
									}
								}
							}
							weight = {
								modifier = {
									factor = 10000
									any_neighbor_province = {
										trigger_if = {
											limit = {
												exists = holding_owner
											}
											holding_owner = scope:hof
										}
										trigger_else = {
											always = no
										}
									}
								}
							}
							save_scope_as = buy_holding_target
						}
					}
					head_of_family = {
						add_holding = scope:buy_holding_target
					}
				}
			}
		}
		#AI buff by making them choose the good law at gamestart
		if = {
			limit = { 
				is_monarchy = yes
				has_law = relaxed_recruiting_standards
			}
			change_law = recruit_from_nobles
		}
		if = {
			limit = { 
				tag = ROM
			}
			change_law = lex_porcia
		}
		if = {
			limit = {
				NOT = { has_global_variable = seaonal_food_game_rule }
				NOT = { has_global_variable = province_init_inv_done }
			}
			trigger_event = { id = harvest.1 months = 2 }
			every_province = {
				limit = {
					has_owner = yes
				}
				add_province_modifier = {
					name = harvest_day1boost_modifier
					duration = 31
				}
			}
			every_province = {
				limit = {
					NOR = {
						is_sea = yes
						terrain = riverine_terrain
						has_city_status = yes
					}
				}
				add_neighbor_city_modifier_effect = yes
			}
			set_global_variable = province_init_inv_done
		}
		#Civilization to settlements next to cities
		if = {
			limit = {
				NOT = { has_global_variable = is_playing_invictus }
			}
			set_global_variable = is_playing_invictus #For other mods to check for Invictus stuff without errors plz don't remove
		}
	}
}
